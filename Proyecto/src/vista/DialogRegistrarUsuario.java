package vista;


import encriptacion.HashGenerator;
import javax.swing.JOptionPane;
import a2f.SecretGenerator;
import modelo.ManagerUsuarioDB;

/**
 *
 * @author Iván Javier Parra
 */
public class DialogRegistrarUsuario extends javax.swing.JDialog {
    
    
    public DialogRegistrarUsuario(javax.swing.JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarDialog();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHeader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlFooter = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlBody = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        txtRepetirPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Usuario");

        pnlHeader.setBackground(java.awt.Color.black);

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(123, 234, 12));
        jLabel1.setText("Registrar Usuario");
        pnlHeader.add(jLabel1);

        getContentPane().add(pnlHeader, java.awt.BorderLayout.PAGE_START);

        pnlFooter.setBackground(java.awt.Color.black);

        jSplitPane1.setBackground(new java.awt.Color(123, 234, 12));
        jSplitPane1.setDividerSize(0);

        btnAceptar.setBackground(java.awt.Color.black);
        btnAceptar.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(123, 234, 12));
        btnAceptar.setText(" Aceptar ");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        jSplitPane1.setLeftComponent(btnAceptar);

        btnCancelar.setBackground(java.awt.Color.black);
        btnCancelar.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(123, 234, 12));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jSplitPane1.setRightComponent(btnCancelar);

        pnlFooter.add(jSplitPane1);

        getContentPane().add(pnlFooter, java.awt.BorderLayout.PAGE_END);

        pnlBody.setBackground(java.awt.Color.darkGray);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agregarusuario.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(123, 234, 12));
        jLabel3.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(123, 234, 12));
        jLabel4.setText("Email");

        jLabel5.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(123, 234, 12));
        jLabel5.setText("Contraseña");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(123, 234, 12));
        jLabel6.setText("Repetir Contraseña");

        txtRepetirPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRepetirPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBodyLayout = new javax.swing.GroupLayout(pnlBody);
        pnlBody.setLayout(pnlBodyLayout);
        pnlBodyLayout.setHorizontalGroup(
            pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBodyLayout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBodyLayout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtRepetirPassword)
                    .addComponent(txtNombre)
                    .addComponent(txtEmail)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBodyLayout.createSequentialGroup()
                        .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(145, 145, 145)))
                .addGap(93, 93, 93))
        );
        pnlBodyLayout.setVerticalGroup(
            pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBodyLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRepetirPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(pnlBody, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Configura atributos del diálogo.
     */
    private void inicializarDialog(){
        this.setLocationRelativeTo(null);
    }
    
    
    /**
     * Se regitra un usuario.
     * @param evt 
     */
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        String nombre = txtNombre.getText();
        String email = txtEmail.getText();
        String password = txtPassword.getText();
        String repetir_password = txtRepetirPassword.getText();
        
        //Hacer las validaciones 
        String mensaje_validacion = validarTxt();
        if(mensaje_validacion.compareToIgnoreCase("")!=0){
            JOptionPane.showMessageDialog(this,mensaje_validacion,"Mensaje",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        //Obtenemos secret key para la validación 2af.
        String clave_secreta = obtenerClaveSecreta();
        
        //Registrar usuario en la BD, genero su claveSecreta.
        String mensaje = agregarUsuario(nombre,email,password,clave_secreta);
        if (mensaje.compareToIgnoreCase("")==0){
            System.out.println("Registro exitoso!");
            JOptionPane.showMessageDialog(this,"Registro exitoso!","Mensaje",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }
        else{
            System.out.println("Registro fracasó!");
            JOptionPane.showMessageDialog(this,mensaje,"Error en la BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    
    /**
     * Genera una clave secreta única para el usuario. 
     * @return una clave secreta en Base32.
     */
    private String obtenerClaveSecreta(){
        byte[] secreto = SecretGenerator.generar();
        return SecretGenerator.toBase32(secreto);
    }
    
    
    /**
     * Agrega un usuario a la Base de Datos.
     * 
     * @param nombre: nombre del usuario.
     * @param email: email del usuario.
     * @param password: password del usuario.
     * @param clave_secreta: clave secreta del usuario.
     * @return un String vacío si el usuario fue agregado con éxito, caso contrario un String con el mensaje de error.
     */
    private String agregarUsuario(String nombre,String email,String password,String clave_secreta){
        ManagerUsuarioDB mdb = new ManagerUsuarioDB();
        
        //encripto password con SHA1
        String password_encriptado = HashGenerator.getHash(password, "SHA1");
        
        
        boolean exito = mdb.insertarRegistro(nombre, email, password_encriptado, clave_secreta);
        if(exito)return "";
        else return mdb.getMensaje_error();
    }
    
    
    private String validarTxt(){
        if(txtNombre.getText().compareToIgnoreCase("")==0)return "Debe ingresar el nombre.";
        else if(txtEmail.getText().compareToIgnoreCase("")==0)return "Debe ingresar el email.";
        else if(txtPassword.getText().compareToIgnoreCase("")==0)return "Debe ingresar el Password.";
        else{
            if(txtPassword.getText().compareToIgnoreCase(txtRepetirPassword.getText())!=0)return "Password no coinciden.";
        }
        return "";
    }
    
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtRepetirPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRepetirPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRepetirPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogRegistrarUsuario dialog = new DialogRegistrarUsuario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel pnlBody;
    private javax.swing.JPanel pnlFooter;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtRepetirPassword;
    // End of variables declaration//GEN-END:variables
}
